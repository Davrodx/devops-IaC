trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'ARM-Manager'
  location: 'eastus'
  namePrefix: 'myapp'
  tenantId: 'ed4ea245-6155-4c12-a192-b87bc12e9cc5'
  objectId: '8cc342d9-1d50-4a28-abd9-25ef76d9d4d4'
  appName: 'WebAppPortfolio'

stages:
- stage: DeployInfrastructure
  jobs:
  - job: DeployInfra
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Starting Bicep deployment to existing resource group 'PortfolioDev'..."
          az deployment group create \
            --resource-group PortfolioDev \
            --template-file infra/main.bicep \
            --parameters namePrefix=$(namePrefix) location=$(location) tenantId=$(tenantId) objectId=$(objectId)
          exit_code=$?

          if [ $exit_code -eq 0 ]; then
            echo "✅ Deployment succeeded."
          elif [ $exit_code -eq 1 ]; then
            echo "⚠️ Deployment may have succeeded, but Azure CLI returned a known parsing error."
          else
            echo "❌ Deployment failed with exit code $exit_code"
            exit $exit_code
          fi
      displayName: 'Deploy Bicep Infrastructure'

- stage: DeployWebApp
  dependsOn: DeployInfrastructure
  jobs:
  - job: BuildAndDeploy
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Use Node.js 18.x'

    - script: |
        cd src
        npm install
        npm run build || echo "No build script found, skipping build step"
      displayName: 'Install Dependencies and Build App'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'src'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true
      displayName: 'Archive Web App Files'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appName)
        package: '$(Build.ArtifactStagingDirectory)/app.zip'
      displayName: 'Deploy Web App to Azure'
