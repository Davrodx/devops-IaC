trigger:
  none

variables:
  azureSubscription: 'ARM-Manager'
  resourceGroupName: 'CareerPortfolio'
  location: 'East US'
  namePrefix: 'demo030303'

stages:
  - stage: DeployInfra
    displayName: 'Deploy Infrastructure with Bicep'
    jobs:
      - job: BicepDeployment
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "üîê Getting tenantId..."
                $tenantId = az account show --query tenantId -o tsv
                $objectId = '8cc342d9-1d50-4a28-abd9-25ef76d9d4d4'

                Write-Host "‚úÖ tenantId = $tenantId"
                Write-Host "‚úÖ objectId = $objectId"

                Write-Host "üõ†Ô∏è Building Bicep to ARM JSON..."
                $bicepPath = "$(System.DefaultWorkingDirectory)\infra\main.bicep"
                $outputPath = "$(System.DefaultWorkingDirectory)\infra\main.json"
                az bicep build --file $bicepPath --outFile $outputPath

                $params = @{
                  namePrefix = @{ value = "$(namePrefix)" }
                  location   = @{ value = "$(location)" }
                  tenantId   = @{ value = "$tenantId" }
                  objectId   = @{ value = "$objectId" }
                }

                $paramsPath = "$(System.DefaultWorkingDirectory)\bicep-params.json"
                $params | ConvertTo-Json -Depth 3 | Out-File -FilePath $paramsPath -Encoding utf8

                Write-Host "üöÄ Deploying ARM template..."
                $cmd = "az deployment group create --resource-group `"$env:resourceGroupName`" --template-file `"$outputPath`" --parameters `@$paramsPath` --debug"
                Write-Host "Executing: $cmd"
                Invoke-Expression $cmd

  - stage: BuildAndDeployApp
    displayName: 'Build and Deploy Node.js App'
    dependsOn: DeployInfra
    jobs:
      - job: DeployApp
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Use Node.js 18'

          - script: |
              cd src/api
              npm install
              powershell Compress-Archive -Path * -DestinationPath $(Build.ArtifactStagingDirectory)\app.zip
            displayName: 'Install & Zip API App'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webApp'
              appName: '$(namePrefix)-webapp'
              package: '$(Build.ArtifactStagingDirectory)\app.zip'
            displayName: 'Deploy to Azure Web App'
